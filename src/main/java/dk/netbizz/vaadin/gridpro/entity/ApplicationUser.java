package dk.netbizz.vaadin.gridpro.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;

@Data
@AllArgsConstructor
@NoArgsConstructor
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@Entity
public class ApplicationUser implements Serializable {

    @EqualsAndHashCode.Include
    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    private Integer id;
    private String tenantId;

    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "tenant_department_id", nullable = false)
    @OnDelete(action = OnDeleteAction.CASCADE)
    @JsonIgnore
    private TenantDepartment tenantDepartment;

    private String jobPosition;
    @JsonIgnore
    private String hashedPassword = "";
    private Boolean mustChangePwd;
    private String fullname = "";
    private String email = "";
    private Boolean emailConfirmed;
    private String emailConfirmationString = "";
    private LocalDate birthday;
    private String phone = "";
    private String zipcodeCity = "";

    private Integer profilePictureId = 0;     // May be null if no pictures - foreign key ref to image_info.id
    private LocalDateTime created;
    private LocalDateTime lastLogin;
    private Boolean isLocked;                     //  used for spring security  boolean isAccountNonLocked();
    private Boolean isDisabled;                   //  when an employee is terminated
    private String description = "";            // Max 250 characters
    private String picture = "";                // bytea in database column

    @Override
    public String toString() {
        return this.fullname;
    }
}


/*
create table if not exists tendernisse.application_user (
    id integer not null generated by default as identity primary key,
    tenant_id character varying (36) not null,
    tenant_department_id integer not null,               -- Hard relation
    job_position character varying (50),
    hashed_password character varying (256) not null,
    must_change_pwd boolean not null,
    fullname character varying (50),
    email character varying (100) not null,
    email_confirmed boolean not null,                   --  used for spring security  boolean isEnabled() and boolean isCredentialsNonExpired();
    email_confirmation_string character varying (256),
    birthday date,
    phone character varying (15),
    zipcode_city character varying (100),
    profile_picture_id integer not null,                -- 0 = anonymt billede - foreign key ref to image_info.id
    created timestamp not null,
    last_login timestamp not null,
    is_locked boolean not null,                         -- used for spring security  boolean isAccountNonLocked();-
    is_disabled boolean not null,                       -- when an employee is terminated
    description character varying (250),
    picture bytea,
    foreign key(tenant_department_id) references tenant_department on delete restrict
);
 */